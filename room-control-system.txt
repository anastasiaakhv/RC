workspace "Room Control" "This workspace documents the architecture of the Room Control system for a fictional hospital for the course Architecture of Software Engineering in winter 2022." {

    model {
        patient = person "Patient" "An user that has a room assigned and can control some of the room's equipments."
        roomControl = softwareSystem "Room Control" "<Add two or three sentences about its purpose here (from the first consultation)>" {
            ui = container "User interface" "The interface presented to users. It is a web application or a mobile application or a remote controller."
            api = container "API" "The API provides access to the rooms network. It does not need to be configured for any specific UI so any type of it can use the same API"
            communication = container "Communication" "<This module is responsible for communication between patients and users>" {
                notifications = component "Notifications" "The sub-module notifications aims to notify the nurse when they are needed."
                nurseCall = component "Nurse Call" "The sub-module Nurse Call aims to allow patients to call a nurse."
            }
            people = container "People" "This module is responsible for getting all the information about users, as well as assigning them to different rooms"
            cache = container "Cache" "Stores general information about the user so it can be easily accessed from anywhere in the application"
            login = container "User log-in" "<description>"
            equipInteraction = container "Equipment interaction" "Translate requests from the user interface to method calls, which read or write to equipments." {
                bedGetter = component "Getter for beds" "Issue a read request to check the status the bed."
                bedSetter = component "Setter for beds" "Issue a write request to change the bed state."
                lightsGetter = component "Getter for lights" "Issue a read request to check the status the lights."
                lightsSetter = component "Setter for lights" "Issue a write request to change the status of the lights."
                windowsGetter = component "Getter for windows" "Issue a read request to change the status of the windows."
                windowsSetter = component "Setter for windows" "Issue a write request to change the status of the windows."
                airCondGetter = component "Getter for the air conditioner" "Issue a read request to change the status of the air conditioner."
                airCondSetter = component "Setter for the air conditioner" "Issue a write request to change the status of the air conditioner."
            }
            uei = container "Unified equipment interface" "An interface that provides a singular, unified way to communicate with each piece of equipment, regardless of their manufacturer." {
                beds = component "Bed control" "Methods that allow interactions with beds."
                lights = component "Lights control" "Methods that allow interactions with lights."
                windows = component "Windows control" "Methods that allow interactions with windows."
                airCond = component "Air conditioning" "Methods that allow interactions with the air conditioner."
            }
            rooms = container "Rooms" "The module which allows the users to select a room which they want to access"
        }
    }
}
